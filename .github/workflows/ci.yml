name: CI
env:
  SSL_PEER_NAME: server:rmq
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  supported-versions-matrix:
    name: Supported Versions Matrix
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.supported-versions-matrix.outputs.version }}
    steps:
      - uses: actions/checkout@v1
      - id: supported-versions-matrix
        uses: WyriHaximus/github-action-composer-php-versions-in-range@v1
  test:
    name: Run Tests on PHP ${{ matrix.php }} against RabbitMQ ${{ matrix.rabbitmq }}
    runs-on: ubuntu-latest
    needs:
      - supported-versions-matrix
    strategy:
      fail-fast: false
      matrix:
        php: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}
        composer: ["install"]
        rabbitmq: ["3"]
        ssl_test: ["no", "yes"]
#        composer: ["update --prefer-lowest", "install"]
#        rabbitmq: ["3", "3.7", "3.8"]
#        ssl_test: ["no", "yes", "client"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, ctype, iconv, bcmath, filter, json
          coverage: xdebug, pcov
          tools: composer
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Get composer action hash
        id: composer-action-hash
        run: printf "::set-output name=hash::%s" $(echo -n "${{ matrix.composer }}" | sha512sum)
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ steps.composer-action-hash.outputs.hash }}
      - name: Install Composer dependencies
        run: composer ${{ matrix.composer }} --no-progress --no-interaction --no-suggest --optimize-autoloader --ansi
      - name: Start RabbitMQ and run Tests
        run: |
          if [ "${{ matrix.ssl_test }}" = "no" ]; then
            docker run -it -p 5671:5671 -p 5672:5672 --name rabbitmq -d rabbitmq:${{ matrix.rabbitmq }}-management rabbitmq-server --health-cmd "rabbitmq-diagnostics ping" --health-interval 1s --health-timeout 5s --health-retries 13
          elif [ "${{ matrix.ssl_test }}" = "client" ]; then
            echo "Setting up SSL tests with peer verification"
            cd test/ssl
            mkdir etcrabbitmq
            make ca.pem server.pem
            cp ca.pem server.pem server.key ./etcrabbitmq/
            make client.pem
            cp rabbitmq.ssl.verify_none.conf ./etcrabbitmq/rabbitmq.conf
            chmod 0777 ./etcrabbitmq/ -Rfv
            docker run -it -p 5673:5673 -p 5672:5672 -v `pwd`/etcrabbitmq/:/etc/rabbitmq/ --name rabbitmq -d rabbitmq:${{ matrix.rabbitmq }}-management rabbitmq-server --health-cmd "rabbitmq-diagnostics ping" --health-interval 1s --health-timeout 5s --health-retries 13
            cd ../../
          else
            echo "Setting up SSL"
            cd test/ssl
            mkdir etcrabbitmq
            make ca.pem server.pem
            cp ca.pem server.pem server.key ./etcrabbitmq/
            make client.pem
            cp rabbitmq.ssl.verify_peer.conf ./etcrabbitmq/rabbitmq.conf
            chmod 0777 ./etcrabbitmq/ -Rfv
            docker run -it -p 5673:5673 -p 5672:5672 -v `pwd`/etcrabbitmq/:/etc/rabbitmq/ --name rabbitmq -d rabbitmq:${{ matrix.rabbitmq }}-management rabbitmq-server --health-cmd "rabbitmq-diagnostics ping" --health-interval 1s --health-timeout 5s --health-retries 13
            cd ../../
          fi
          sleep 30
          if [ "${{ matrix.ssl_test }}" = "yes" ]; then
            TEST_RABBITMQ_CONNECTION_URI="amqp://guest:guest@localhost:5673/" SSL_PEER_NAME="server.rmq" ./vendor/bin/phpunit --coverage-text || TEST_RABBITMQ_CONNECTION_URI="amqp://guest:guest@localhost:5673/" SSL_PEER_NAME="server.rmq" ./vendor/bin/phpunit || docker logs rabbitmq
          elif [ "${{ matrix.ssl_test }}" = "client" ]; then
            TEST_RABBITMQ_CONNECTION_URI="amqp://guest:guest@localhost:5673/" SSL_PEER_NAME="server.rmq" SSL_CLIENT_CERT="ssl/client.pem" SSL_CLIENT_KEY="ssl/client.key" ./vendor/bin/phpunit --coverage-text || TEST_RABBITMQ_CONNECTION_URI="amqp://guest:guest@localhost:5673/" SSL_PEER_NAME="server.rmq" SSL_CLIENT_CERT="ssl/client.pem" SSL_CLIENT_KEY="ssl/client.key" ./vendor/bin/phpunit || docker logs rabbitmq
          else
            TEST_RABBITMQ_CONNECTION_URI="amqp://guest:guest@localhost:5672/" ./vendor/bin/phpunit --coverage-text || TEST_RABBITMQ_CONNECTION_URI="amqp://guest:guest@localhost:5672/" ./vendor/bin/phpunit || docker logs rabbitmq
          fi
